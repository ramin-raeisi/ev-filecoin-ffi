#!/usr/bin/env bash
# shellcheck disable=SC2155 enable=require-variable-braces

set -Exeo pipefail
auth_header=()
if [ -n "${GITHUB_TOKEN}" ]; then
    auth_header=("-H" "Authorization: token ${GITHUB_TOKEN}")
fi

# set CWD to the root of filecoin-ffi
#
cd "$(dirname "${BASH_SOURCE[0]}")"

# tracks where the Rust sources are were we to build locally instead of
# downloading from GitHub Releases
#
rust_sources_dir="rust"

# tracks where the C++ sources are were we to build locally instead of
# downloading from GitHub Releases
#
cpp_sources_dir="libs/cpp-fil-proofs"

# an array of values passed as 'target-feature' to the Rust compiler if we're
# building an optimized libfilcrypto (which takes advantage of some perf-boosting
# instruction sets)
#
#optimized_release_rustc_target_features=$(jq -r '.[].rustc_target_feature' < "${rust_sources_dir}/rustc-target-features-optimized.json")

# each value in this area is checked against the "features" of the hosts CPU
# in order to determine if the host is suitable for an optimized release
#
cpu_features_required_for_optimized_release=$(jq -r '.[].check_cpu_for_feature | select(. != null)' <"${rust_sources_dir}/rustc-target-features-optimized.json")

main() {
    local __release_flags=$(get_release_flags)
    (echo >&2 "[install-filcrypto/main] building libfilcrypto from local sources (dir = ${cpp_sources_dir})")

    build_from_cpp_source "filcrypto" "${cpp_sources_dir}" "Release"

    # copy from CMake's build directory (target) to root of filecoin-ffi
    #
    #    find -L "${cpp_sources_dir}/build/release" -type f -name filcrypto.h -exec cp -- "{}" . \;
    #    find -L "${cpp_sources_dir}/build/release" -type f -name libfilcrypto.a -exec cp -- "{}" . \;
    #    find -L "${cpp_sources_dir}" -type f -name filcrypto.pc -exec cp -- "{}" . \;

    # build libfilcrypto (and corresponding header and pkg-config)
    #
    build_from_rust_source "filcrypto" "${rust_sources_dir}" "${__release_flags}"

    # copy from Rust's build directory (target) to root of filecoin-ffi
    #
    find -L "${rust_sources_dir}/target/release" -type f -name filcrypto.h -exec cp -- "{}" . \;
    find -L "${rust_sources_dir}/target/release" -type f -name libfilcrypto.a -exec cp -- "{}" . \;
    find -L "${rust_sources_dir}" -type f -name filcrypto.pc -exec cp -- "{}" . \;

    check_installed_files

    (echo >&2 "[install-filcrypto/main] successfully built and installed libfilcrypto from source")
}

build_from_cpp_source() {
    local __library_name=$1
    local __cpp_sources_path=$2
    local __release_type=$3
    local __repo_sha1=$(git rev-parse HEAD)
    local __repo_sha1_truncated="${__repo_sha1:0:16}"
    local __target_feature=""

    (echo >&2 "building from source @ ${__repo_sha1_truncated}")

    if ! [ -x "$(command -v cmake)" ]; then
        (echo >&2 '[build_from_cpp_source] Error: CMake is not installed.')
        (echo >&2 '[build_from_cpp_source] install CMake (https://cmake.org) to resolve this problem.')
        exit 1
    fi

    cmake --version

    mkdir -p ${__cpp_sources_path}/build

    pushd "${__cpp_sources_path}/build"

    cmake -DCMAKE_BUILD_TYPE=${__release_type} -DBUILD_TESTS=TRUE -DBUILD_SHARED_LIBS=TRUE ..
    cmake --build . --target multiprecision_test_bug11922 -- -j$(nproc)
    cmake --build . --target multiprecision_test_bug12039 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_01 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_02 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_03 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_04 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_05 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_06 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_07 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_08 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_09 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_10 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_11 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_12 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_13 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_14 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_15 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_16 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_18 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_20 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_21 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_22 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_23 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_24 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_25 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_26 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_27 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_28 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_29 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_30 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_31 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_32 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_33 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_34 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_35 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_36 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_37 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_38 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_39 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_40 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_41 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_42 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_43 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_44 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_45 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_46 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_47 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_48 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_49 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_51 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_52 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_53 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_54 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_55 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_56 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_57 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_58 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_conv_fail_59 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_cpp_int_complement -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_cpp_int_negate_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_cpp_int_negate_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_01 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_02 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_03 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_04 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_05 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_06 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_07 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_08 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_09 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_10 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_11 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_12 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_13 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_14 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_15 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_16 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_17 -- -j$(nproc)
    cmake --build . --target multiprecision_test_compile_fail_operator_fail_18 -- -j$(nproc)
    cmake --build . --target multiprecision_test_cpp_bin_float_import_export -- -j$(nproc)
    cmake --build . --target multiprecision_test_cpp_bin_float_snips -- -j$(nproc)
    cmake --build . --target multiprecision_test_cpp_dec_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_cpp_dec_float_snips -- -j$(nproc)
    cmake --build . --target multiprecision_test_cpp_int_import_export -- -j$(nproc)
    cmake --build . --target multiprecision_test_cpp_int_snips -- -j$(nproc)
    cmake --build . --target multiprecision_test_debug_adaptor_snips -- -j$(nproc)
    cmake --build . --target multiprecision_test_floating_point_examples -- -j$(nproc)
    cmake --build . --target multiprecision_test_git_issue_30 -- -j$(nproc)
    cmake --build . --target multiprecision_test_gmp_snips -- -j$(nproc)
    cmake --build . --target multiprecision_test_include_test_cpp_dec_float_include_test -- -j$(nproc)
    cmake --build . --target multiprecision_test_include_test_cpp_int_include_test -- -j$(nproc)
    cmake --build . --target multiprecision_test_include_test_gmp_include_test -- -j$(nproc)
    cmake --build . --target multiprecision_test_include_test_mpfr_include_test -- -j$(nproc)
    cmake --build . --target multiprecision_test_integer_examples -- -j$(nproc)
    cmake --build . --target multiprecision_test_issue_13148 -- -j$(nproc)
    cmake --build . --target multiprecision_test_issue_13301 -- -j$(nproc)
    cmake --build . --target multiprecision_test_mixed_integer_arithmetic -- -j$(nproc)
    cmake --build . --target multiprecision_test_modular_examples -- -j$(nproc)
    cmake --build . --target multiprecision_test_mpfr_snips -- -j$(nproc)
    cmake --build . --target multiprecision_test_safe_prime -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_acos_cpp_bin_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_acos_cpp_dec_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_acos_mpf50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_acos_mpfr50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_adapt_serial -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_ab_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_ab_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_ab_3 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_backend_concept -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_complex_adaptor -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_complex_adaptor_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_bin_float_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_bin_float_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_bin_float_2m -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_bin_float_3 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_dec_float_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_dec_float_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_dec_float_3 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_dec_float_3m -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_10 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_11 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_12 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_13 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_14 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_15 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_16 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_17 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_18 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_19 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_3 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_4 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_5 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_6 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_7 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_8 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_9 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_cpp_int_br -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_dbg_adptr1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_dbg_adptr1m -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_dbg_adptr2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_logged_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_logged_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpc -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpf -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpf_50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpfr -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpfr_50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpfr_50_static -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpq -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpz -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpz_br -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_arithmetic_mpz_rat -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_asin_cpp_bin_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_asin_cpp_dec_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_asin_mpf50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_asin_mpfr50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_atan_cpp_bin_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_atan_cpp_dec_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_atan_mpf50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_atan_mpfr50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_checked_cpp_int -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_checked_mixed_cpp_int -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_constants_cpp_dec_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_constants_mpf50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_constants_mpfr_50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cos_cpp_bin_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cos_cpp_dec_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cos_mpf50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cos_mpfr50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cosh_cpp_bin_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cosh_cpp_dec_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cosh_mpf50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cosh_mpfr50 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_bin_float -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_bin_float_conv -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_bin_float_io_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_bin_float_io_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_dec_float_round -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_dec_float_serial_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_dec_float_serial_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_1 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_2 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_3 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_4 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_5 -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_conv -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_deserial -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_import_export -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_left_shift -- -j$(nproc)
    cmake --build . --target multiprecision_test_test_cpp_int_lit -- -j$(nproc)
    cmake --build . --target tests-block -- -j$(nproc)
    cmake --build . --target tests-codec -- -j$(nproc)
    cmake --build . --target tests-hash -- -j$(nproc)
    cmake --build . --target tests-stream -- -j$(nproc)
    cmake --build . --target tests-core -- -j$(nproc)

    popd
}

build_from_rust_source() {
    local __library_name=$1
    local __rust_sources_path=$2
    local __release_flags=$3
    local __repo_sha1=$(git rev-parse HEAD)
    local __repo_sha1_truncated="${__repo_sha1:0:16}"

    (echo >&2 "building from source @ ${__repo_sha1_truncated}")

    if ! [ -x "$(command -v cargo)" ]; then
        (echo >&2 '[build_from_source] Error: cargo is not installed.')
        (echo >&2 '[build_from_source] install Rust toolchain to resolve this problem.')
        exit 1
    fi

    pushd "${__rust_sources_path}"

    cargo --version

    if [ -n "${__release_flags}" ]; then
        RUSTFLAGS="-C target-feature=${__release_flags}" ./scripts/build-release.sh "${__library_name}"
    else
        ./scripts/build-release.sh "${__library_name}"
    fi

    popd
}

get_release_flags() {
    local __features=""

    # determine where to look for CPU features
    #
    if [[ ! -f "/proc/cpuinfo" ]]; then
        (echo >&2 "[get_release_flags] no /proc/cpuinfo file; falling back to Darwin feature detection")
        __features=$(sysctl -a | grep machdep.cpu | tr '[:upper:]' '[:lower:]' | grep features)
    else
        #aarch64_uname=$(uname -a | grep aarch64)
        x86_64_uname=$(uname -a | grep x86_64)
        # shellcheck disable=SC2002
        if [ -n "${x86_64_uname}" ]; then
            __features=$(cat /proc/cpuinfo | grep flags | head -n 1)
        else
            # For now we assume aarch64.  If another supported platform is added, explicitly check for it
            __features=$(cat /proc/cpuinfo | grep Features | head -n 1)
        fi
    fi

    # Maps cpu flag to rust-fil-proofs flags (related to entries in libs/rust-fil-proofs/rustc-target-features-optimized
    # .json)
    feature_map=("adx:+adx" "sha_ni:+sha" "sha2:+sha2" "sse2:+sse2" "avx2:+avx2" "avx:+avx" "sse4_2:+sse4.2" "sse4_1:+sse4.1")

    target_features=""
    # check for the presence of each required CPU feature
    #
    # shellcheck disable=SC2068 # the splitting is intentional
    for x in ${cpu_features_required_for_optimized_release[@]}; do
        current_feature=$(echo "${__features}" | grep -c "${x}")
        if [ "1" = "${current_feature}" ]; then
            for feature in "${feature_map[@]}"; do
                key=${feature%%:*}
                if [ "${key}" == "${x}" ]; then
                    val=${feature#*:}
                    if [ -z "${target_features}" ]; then
                        target_features="${val}"
                    else
                        target_features="${target_features},${val}"
                    fi
                fi
            done
        fi
    done

    echo "${target_features}"
}

check_installed_files() {
    if [[ ! -f "./filcrypto.h" ]]; then
        (echo >&2 "[check_installed_files] failed to install filcrypto.h")
        exit 1
    fi

    if [[ ! -f "./libfilcrypto.a" ]]; then
        (echo >&2 "[check_installed_files] failed to install libfilcrypto.a")
        exit 1
    fi

    if [[ ! -f "./filcrypto.pc" ]]; then
        (echo >&2 "[check_installed_files] failed to install filcrypto.pc")
        exit 1
    fi
}

main "$@"
exit
